server:
    contextPath: /
    port: ${PORT} 

fcsFileStoreLocation:
    path: ${FILE_PATH}

resultFileStoreLocation:
    path: ${RESULT_FILE_PATH}

callbackUrl: ${IP}:${PORT}/taskStatus

adminEmailAddr: flowgate_helpdesk@jcvi.org

grails:
    plugin:
        springsecurity:
            ui:

                register:
                    postRegisterUrl: /
                    defaultRoleNames:
                        - 'ROLE_NewUser'
                        - 'ROLE_Guest'

#   token validate
                token:
                    validation:
                        useBearerToken: true
                        enableAnonymousAccess: true

            logout:
                postOnly: false
                afterLogoutUrl: /

            successHandler:
                defaultTargetUrl: /project/list

# Added by the Spring Security Core plugin:
            auth:
                loginFormUrl: /
            userLookup:
                userDomainClassName: 'flowgate.User'
                authorityJoinClassName: 'flowgate.UserRole'
                usernamePropertyName: 'username'
            authority:
                className: flowgate.Role

            controllerAnnotations:
                staticRules:

                    #	'/j_spring_security_switch_user': ['ROLE_ADMIN'],
                    #   '/j_spring_security_exit_user':   ['permitAll']
                    - pattern: /upload/**
                      access:
                        - 'ROLE_ADMIN'
                        - 'ROLE_USER'
                    - pattern: /user/**
                      access:
                        - 'ROLE_Admin'
                        - 'ROLE_Administrator'
                    - pattern: /logout/impersonate
                      access:
                        - 'permitAll'
                    - pattern: /dashboard
                      access:
                        - 'permitAll'
                    - pattern: /dashboard/index.gsp
                      access:
                        - 'permitAll'
                    - pattern: /login/**
                      access:
                        - 'permitAll'
                    - pattern: /login/impersonate
                      access:
                        - 'ROLE_Admin'
                        - 'ROLE_Administrator'
                    - pattern: /logout/**
                      access:
                        - 'permitAll'
                    - pattern: /logout/index
                      access:
                        - 'permitAll'
                    - pattern: /logout/index.gsp
                      access:
                        - 'permitAll'
                    - pattern: /logoff/**
                      access:
                        - 'permitAll'
                    - pattern: /logoff/index
                      access:
                        - 'permitAll'
                    - pattern: /logoff/index.gsp
                      access:
                        - 'permitAll'
                    - pattern: /error
                      access:
                        - 'permitAll'
                    - pattern: /**
                      access:
                        - 'permitAll'
#               	  [pattern: '/project/list',		    access: ['permitAll']],
                    - pattern: /mgmnt/index.gsp
                      access:
                        - 'permitAll'
                    - pattern: /register/**
                      access:
                        - 'permitAll'
                    - pattern: /dbconsole/**
                      access:
                        - 'permitAll'
                    - pattern: /shutdown
                      access:
                        - 'permitAll'
                    - pattern: /gp/**
                      access:
                        - 'permitAll'
                    - pattern: /assets/**
                      access:
                        - 'permitAll'
                    - pattern: /assets/images/**
                      access:
                        - 'permitAll'
                    - pattern: /**/fonts/**
                      access:
                        - 'permitAll'
                    - pattern: /**/js/**
                      access:
                        - 'permitAll'
                    - pattern: /**/html/**
                      access:
                        - 'permitAll'
                    - pattern: /**/css/**
                      access:
                        - 'permitAll'
                    - pattern: /**/images/**
                      access:
                        - 'permitAll'
                    - pattern: /**/favicon.ico
                      access:
                        - 'permitAll'


            filterChain:
                chainMap:
                    - pattern: /assets/**
                      filters: 'none'
                    - pattern: /assets/images/**
                      filters: 'none'
                    - pattern: /**/js/**
                      filters: 'none'
                    - pattern: /**/html/**
                      filters: 'none'
                    - pattern: /**/css/**
                      filters: 'none'
                    - pattern: /**/images/**
                      filters: 'none'
                    - pattern: /**/favicon.ico
                      filters: 'none'
#	                    [pattern: '/project/list',	 filters: 'none'],
                    - pattern: /api/**
                      filters: 'JOINED_FILTERS,-anonymousAuthenticationFilter,-exceptionTranslationFilter,-authenticationProcessingFilter,-securityContextPersistenceFilter'
                    - pattern: /gp/**
                      filters: 'none'
#                      filters: 'JOINED_FILTERS,-anonymousAuthenticationFilter,-exceptionTranslationFilter,-authenticationProcessingFilter,-securityContextPersistenceFilter'
                    - pattern: /**
                      filters: 'JOINED_FILTERS,-restTokenValidationFilter,-restExceptionTranslationFilter'

            rest:
                login:
                    active: true # otherwise no token
                    failureStatusCode: 401
                logout:
                    endpointUrl: /api/logout

#grails:
    profile: web

    resources:
        adhoc:
            includes:
               - '/images/**'
               - '/css/**'
               - '/js/**'
               - '/plugins/**'
               - '/fonts/**'

    mail:
        host: "smtp.gmail.com"
        port: 465
        username: ${MAIL_USERNAME}
        password: ${MAIL_PASSWORD}
        props:
            mail.smtp.auth: "true"
            mail.smtp.socketFactory.port: "465"
            mail.smtp.socketFactory.class: "javax.net.ssl.SSLSocketFactory"
            mail.smtp.socketFactory.fallback: "false"



    codegen:
        defaultPackage: flowgate
    spring:
        transactionManagement:
            proxies: false
    mime:
        use:
            accept:
                header: true
        disable:
            accept:
                header:
                    userAgents:
                    - Gecko
                    - WebKit
                    - Presto
                    - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
            - text/html
            - application/xhtml+xml
            js: text/javascript
            json:
            - application/json
            - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
            - application/hal+json
            - application/hal+xml
            xml:
            - text/xml
            - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
        upload:
            maxFileSize: 9999999999
            maxRequestSize: 9999999999
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none

    cors:
        enabled: true

info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false
    resources:
      cache-period: 86400

security:
  headers:
    cache: true

# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: false
    jmx:
        enabled: true
        unique-names: true


#endpoints:
#    jmx:
---
hibernate:
    cache:
        queries: false
        use_second_level_cache: true
        use_query_cache: false
        region.factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory

dataSource:
    pooled: true
    jmxExport: true
    driverClassName: com.mysql.jdbc.Driver
    dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}

environments:
    development:
        dataSource:
#            dbCreate: create-drop
            dbCreate: update
            url: jdbc:mysql://localhost:3306/flowgate
    test:
        dataSource:
            dbCreate: update
            url: jdbc:mysql://flowgate.sdsc.edu:3306/flowgate
    production:
        dataSource:
            dbCreate: update
            url: ${MYSQL_URL}
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
